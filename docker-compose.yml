version: "3"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    env_file:
      - .env
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    ports:
      - 3000:3000

  user-service:
    container_name: user-service
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - ./backend/user-service:/usr/src/app

  user-db:
    image: postgres:16rc1-alpine3.18
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - user-data:/var/lib/postgresql/data

  pg-admin:
    image: dpage/pgadmin4:6
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@email.com
      - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - "5050:5050"

  question-service:
    container_name: question-service
    build: 
      context: ./backend/question-service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    volumes:
      - ./backend/question-service:/usr/src/app
    env_file:
      - .env
    depends_on:
      - question-db

  question-db:
    image: mongo:7.0.1
    container_name: mongodb
    ports:
      - "27018:27017"
    volumes:
      - question-data:/data/db
    environment:
      - MONGO_URI=${MONGO_URI}

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "5000:80"

volumes:
  user-data:
  question-data:
