version: '3'

services:
<<<<<<<< HEAD:backend/api-gateway/docker-compose.yaml
  api-gateway:
    container_name: api-gateway
    build: .
    env_file:
      - .env
    ports:
      - "1234:1234"
    volumes:
      - .:/usr/src/app
    networks:
      - peerpreps-backend
    depends_on:
      - db

  db:
    image: postgres:16rc1-alpine3.18
    container_name: postgres-api-gateway
    ports:
      - "5433:5432"
========
  user-service:
    container_name: user-service
    build:
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    ports:
      - "5006:8080"
    volumes:
      - .:/usr/src/app
  db:
    image: postgres:16rc1-alpine3.18
    container_name: postgres
    ports:
      - "5432:5432"
>>>>>>>> a1776366533ade409a6881700b0a6e6fd6b47d38:backend/user-service/docker-compose.yaml
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - data:/var/lib/postgresql/data
<<<<<<<< HEAD:backend/api-gateway/docker-compose.yaml
    networks:
      - peerpreps-backend

volumes:
  data:

networks:
  peerpreps-backend:
    external: true
========

volumes:
  data:
>>>>>>>> a1776366533ade409a6881700b0a6e6fd6b47d38:backend/user-service/docker-compose.yaml
